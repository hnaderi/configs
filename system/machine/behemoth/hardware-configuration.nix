# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "vmd" "xhci_pci" "ahci" "nvme" "usbhid" "sd_mod" ];
  boot.initrd.kernelModules = [ "dm-snapshot" ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/035b4b7c-4a90-4fd7-9762-c41aa85f8e0b";
      fsType = "ext4";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/DFA8-46A7";
      fsType = "vfat";
    };

  swapDevices = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-1fe40d6e2178.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-27e357c22c33.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-27e4cc199a15.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-690b5e5c8506.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-9b704306654d.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-9e65e2dd3bf1.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-b55d36e1afb6.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-cdb77cdee1b2.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-d70e5b14b864.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-e861d7b01e60.useDHCP = lib.mkDefault true;
  # networking.interfaces.br-f51d09c225ca.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker0.useDHCP = lib.mkDefault true;
  # networking.interfaces.docker_gwbridge.useDHCP = lib.mkDefault true;
  # networking.interfaces.eno1.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth2cec8c4.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth3675773.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth47956a7.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth6eb7b4f.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth7ab7074.useDHCP = lib.mkDefault true;
  # networking.interfaces.veth8d60832.useDHCP = lib.mkDefault true;
  # networking.interfaces.vetha77bb71.useDHCP = lib.mkDefault true;
  # networking.interfaces.vethfc32ed4.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp0s20f3.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
